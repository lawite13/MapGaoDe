import{_ as t,o as s,c as e,w as a,i,a as n,b as o,n as h,d as l,e as r,f as c,I as d}from"./index.1a543083.js";const p=t({name:"IndexPage",data:()=>({map:null,isDrawing:!1,canvas:null,ctx:null,linePath:[],history:[],redoStack:[],lineColor:"#00209E",currentLineColor:"#00209E",mapCenter:[114.1694,22.3193],mapZoom:12,mapMoving:!1}),mounted(){this.initializeMap()},computed:{canUndo(){return this.history.length>0},canRedo(){return this.redoStack.length>0}},methods:{initializeMap(){this.map=new AMap.Map("map-container",{zoom:this.mapZoom,center:this.mapCenter,mapStyle:"amap://styles/normal"});const t=document.createElement("canvas");this.map.getContainer().appendChild(t),this.canvas=t,this.ctx=this.canvas.getContext("2d"),this.canvas.style.position="absolute",this.canvas.style.top="0",this.canvas.style.left="0",this.canvas.style.pointerEvents="none",this.resizeCanvas(),window.addEventListener("resize",this.resizeCanvas),this.map.on("zoomend",this.redrawLines),this.map.on("moveend",this.redrawLines),this.map.on("move",this.handleMapMove),this.map.on("zoom",this.handleMapMove)},resizeCanvas(){const t=this.map.getSize();this.canvas.width=t.width,this.canvas.height=t.height,this.redrawLines()},startDrawing(){this.isDrawing=!0,this.map.on("mousedown",this.handleMouseDown),this.map.on("mousemove",this.handleMouseMove),document.addEventListener("mouseup",this.handleMouseUp),this.map.setStatus({dragEnable:!1})},finishDrawing(){this.isDrawing=!1,this.map.off("mousedown",this.handleMouseDown),this.map.off("mousemove",this.handleMouseMove),document.removeEventListener("mouseup",this.handleMouseUp),this.map.setStatus({dragEnable:!0})},handleMouseDown(t){this.mouseDown=!0;const{lng:s,lat:e}=t.lnglat;if(isNaN(s)||isNaN(e))return;this.linePath=[[s,e]],this.ctx.beginPath();const a=this.map.lngLatToContainer(new AMap.LngLat(s,e));this.ctx.moveTo(a.x,a.y)},handleMouseMove(t){if(!this.mouseDown)return;const{lng:s,lat:e}=t.lnglat;if(isNaN(s)||isNaN(e))return;this.linePath.push([s,e]);const a=this.map.lngLatToContainer(new AMap.LngLat(s,e));this.ctx.lineTo(a.x,a.y),this.ctx.strokeStyle=this.currentLineColor,this.ctx.lineWidth=6,this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.stroke()},handleMouseUp(){this.mouseDown&&(this.mouseDown=!1,this.history.push({path:[...this.linePath],color:this.currentLineColor}),this.linePath=[],this.redoStack=[])},undoAction(){if(!this.canUndo)return;const t=this.history.pop();this.redoStack.push(t),this.redrawLines()},redoAction(){if(!this.canRedo)return;const t=this.redoStack.pop();this.history.push(t),this.redrawLines()},redrawLines(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.history.forEach(t=>{this.ctx.beginPath(),t.path.forEach((t,s)=>{const[e,a]=t,i=this.map.lngLatToContainer(new AMap.LngLat(e,a));0===s?this.ctx.moveTo(i.x,i.y):this.ctx.lineTo(i.x,i.y)});const s=this.mapMoving?.3:1;this.ctx.globalAlpha=s,this.ctx.strokeStyle=t.color,this.ctx.lineWidth=6,this.ctx.lineCap="round",this.ctx.lineJoin="round",this.ctx.stroke(),this.ctx.globalAlpha=1})},handleMapMove(){this.mapMoving=!0,this.redrawLines()},handleMapStop(){this.mapMoving=!1,this.redrawLines()},handleColorChange(){this.currentLineColor=this.lineColor}},beforeDestroy(){window.removeEventListener("resize",this.resizeCanvas),this.map.off("move",this.handleMapMove),this.map.off("zoom",this.handleMapMove)}},[["render",function(t,p,u,m,v,g){const f=i,w=r,C=c,M=d;return s(),e(f,{class:"index-page"},{default:a(()=>[n(f,{id:"map-container",class:"map-container"}),n(f,{class:"button-container"},{default:a(()=>[n(f,{class:"top-buttons"},{default:a(()=>[n(w,{onClick:g.undoAction,disabled:!g.canUndo,class:"icon-button"},{default:a(()=>[o("i",{class:"fas fa-undo"})]),_:1},8,["onClick","disabled"]),n(w,{onClick:g.redoAction,disabled:!g.canRedo,class:"icon-button"},{default:a(()=>[o("i",{class:"fas fa-redo"})]),_:1},8,["onClick","disabled"])]),_:1}),n(f,{class:"bottom-buttons"},{default:a(()=>[n(w,{onClick:g.startDrawing,class:h({active:v.isDrawing})},{default:a(()=>[l("編輯")]),_:1},8,["onClick","class"]),n(w,{onClick:g.finishDrawing,class:h({active:!v.isDrawing})},{default:a(()=>[l("移動地圖")]),_:1},8,["onClick","class"])]),_:1}),n(f,{class:"color-picker"},{default:a(()=>[n(C,{for:"line-color"},{default:a(()=>[l("顔色:")]),_:1}),n(M,{type:"color",id:"line-color",modelValue:v.lineColor,"onUpdate:modelValue":p[0]||(p[0]=(t=>v.lineColor=t)),onInput:g.handleColorChange},null,8,["modelValue","onInput"])]),_:1})]),_:1})]),_:1})}],["__scopeId","data-v-79bd734e"]]);export{p as default};
